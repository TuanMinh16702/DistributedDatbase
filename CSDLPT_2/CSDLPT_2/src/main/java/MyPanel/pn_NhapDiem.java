/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package MyPanel;

import Entity.DANGKY;
import Entity.LOP;
import Main.Variables;
import com.microsoft.sqlserver.jdbc.SQLServerDataTable;
import com.microsoft.sqlserver.jdbc.SQLServerException;
import com.microsoft.sqlserver.jdbc.SQLServerPreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author TRANG TUAN MINH
 */
public class pn_NhapDiem extends javax.swing.JPanel {
    private Variables variables;
    /**
     * Creates new form pn_NhapDiem
     */
    public pn_NhapDiem(Variables variables) {
        initComponents();
        this.variables = variables;
        String[] headers = {"Mã lớp tín chỉ", "Mã sinh viên", "Điểm chuyên cần", "Điểm giữa kỳ", "Điểm cuối kì", "Điểm tổng kết"};
        Object[][] data = {
            {"test", "test", 0, 0, 0, 0}
        };
        DefaultTableModel model = new DefaultTableModel(data, headers){
            @Override
            public boolean isCellEditable(int row, int column) {
                return column >= 2 && column < 5;
            }

            @Override
            public void setValueAt(Object aValue, int row, int column) {
                if (isMark(aValue)) {
                    super.setValueAt(aValue, row, column); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/OverriddenMethodBody
                } else return;
                
                if (column < 5) {
                    int diem_cc = Integer.parseInt(String.valueOf(getValueAt(row, 2)));
                    float diem_gk = Float.parseFloat(String.valueOf(getValueAt(row, 3)));
                    float diem_ck = Float.parseFloat(String.valueOf(getValueAt(row, 4)));

                    double total = diem_cc * 0.1 + diem_gk * 0.3 + diem_ck * 0.6;
                    setValueAt(total, row, 5);
                }
            }
        };
        tbl_NhapDiem.setModel(model);
        frame_BDTK.setVisible(false);
        frame_PD.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        frame_BDTK = new javax.swing.JFrame();
        jPanel15 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel18 = new javax.swing.JPanel();
        jPanel17 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cbb_report_lop = new javax.swing.JComboBox<>();
        cbb_report_khoa = new javax.swing.JComboBox<>();
        jPanel16 = new javax.swing.JPanel();
        abc = new javax.swing.JScrollPane();
        tbl_BDTK = new javax.swing.JTable();
        frame_PD = new javax.swing.JFrame();
        jPanel19 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel20 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_PD = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        txt_report_maSV = new javax.swing.JTextField();
        btn_xemPD = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        jPanel11 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        btnGhi = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        btnPhucHoi = new javax.swing.JButton();
        btn_inBDTK = new javax.swing.JButton();
        btn_inPD = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_NhapDiem = new javax.swing.JTable();
        jPanel13 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        cbb_nienKhoa = new javax.swing.JComboBox<>();
        jPanel6 = new javax.swing.JPanel();
        cbb_maMH = new javax.swing.JComboBox<>();
        jLabel9 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        cbb_hocKy = new javax.swing.JComboBox<>();
        jPanel9 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        cbb_nhom = new javax.swing.JComboBox<>();
        jPanel12 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jPanel14 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        cbb_khoa = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();

        frame_BDTK.setSize(new java.awt.Dimension(1000, 850));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("BẢNG ĐIỂM TỔNG KẾT CUỐI KHÓA ");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel4.setText("KHOA:");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel5.setText("LỚP:");

        cbb_report_lop.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        cbb_report_lop.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbb_report_lop.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbb_report_lopItemStateChanged(evt);
            }
        });

        cbb_report_khoa.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        cbb_report_khoa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbb_report_khoa.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbb_report_khoaItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel17Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(3, 3, 3)))
                .addGap(26, 26, 26)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbb_report_lop, 0, 250, Short.MAX_VALUE)
                    .addComponent(cbb_report_khoa, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbb_report_khoa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbb_report_lop, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50))
        );

        jPanel18.add(jPanel17);

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 801, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        tbl_BDTK.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        abc.setViewportView(tbl_BDTK);

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(abc, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 825, Short.MAX_VALUE)
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(abc, javax.swing.GroupLayout.DEFAULT_SIZE, 508, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout frame_BDTKLayout = new javax.swing.GroupLayout(frame_BDTK.getContentPane());
        frame_BDTK.getContentPane().setLayout(frame_BDTKLayout);
        frame_BDTKLayout.setHorizontalGroup(
            frame_BDTKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frame_BDTKLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(frame_BDTKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel16, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        frame_BDTKLayout.setVerticalGroup(
            frame_BDTKLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frame_BDTKLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        frame_PD.setSize(new java.awt.Dimension(771, 670));

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("PHIẾU ĐIỂM CỦA SINH VIÊN");

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 723, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        tbl_PD.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Tên Môn Học", "Điểm"
            }
        ));
        jScrollPane2.setViewportView(tbl_PD);

        jLabel7.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel7.setText("MÃ SINH VIÊN");

        txt_report_maSV.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N

        btn_xemPD.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btn_xemPD.setText("Xem phiếu điểm");
        btn_xemPD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_xemPDActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 735, Short.MAX_VALUE)
                    .addGroup(jPanel20Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_report_maSV, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btn_xemPD)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_report_maSV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_xemPD))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout frame_PDLayout = new javax.swing.GroupLayout(frame_PD.getContentPane());
        frame_PD.getContentPane().setLayout(frame_PDLayout);
        frame_PDLayout.setHorizontalGroup(
            frame_PDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frame_PDLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(frame_PDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        frame_PDLayout.setVerticalGroup(
            frame_PDLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frame_PDLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel2.setLayout(new java.awt.BorderLayout());

        jPanel4.setLayout(new java.awt.CardLayout());

        btnGhi.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnGhi.setText("Ghi");
        btnGhi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGhiActionPerformed(evt);
            }
        });
        jPanel5.add(btnGhi);

        jButton7.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jButton7.setText("Refresh");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel5.add(jButton7);

        btnThoat.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnThoat.setText("Thoát");
        jPanel5.add(btnThoat);

        btnPhucHoi.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btnPhucHoi.setText("Phục Hồi");
        jPanel5.add(btnPhucHoi);

        btn_inBDTK.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btn_inBDTK.setText("In bảng điểm tổng kết");
        btn_inBDTK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_inBDTKActionPerformed(evt);
            }
        });
        jPanel5.add(btn_inBDTK);

        btn_inPD.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        btn_inPD.setText("In Phiếu điểm");
        btn_inPD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_inPDActionPerformed(evt);
            }
        });
        jPanel5.add(btn_inPD);

        jPanel11.add(jPanel5);

        jPanel4.add(jPanel11, "card2");

        jPanel2.add(jPanel4, java.awt.BorderLayout.PAGE_END);

        jScrollPane1.setBackground(new java.awt.Color(242, 242, 242));

        tbl_NhapDiem.setBackground(new java.awt.Color(242, 242, 242));
        tbl_NhapDiem.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        tbl_NhapDiem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã Lớp Tín Chỉ", "Mã Sinh Viên", "Điểm Chuyên Cần", "Điểm Giữa Kỳ", "Điểm Cuối Kỳ"
            }
        ));
        jScrollPane1.setViewportView(tbl_NhapDiem);

        jLabel8.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel8.setText("NIÊN KHÓA:");

        cbb_nienKhoa.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        cbb_nienKhoa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbb_nienKhoa.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbb_nienKhoaItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                .addComponent(cbb_nienKhoa, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cbb_nienKhoa, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        cbb_maMH.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        cbb_maMH.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbb_maMH.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbb_maMHItemStateChanged(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel9.setText("MÔN HỌC:");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 109, Short.MAX_VALUE)
                .addComponent(cbb_maMH, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbb_maMH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addContainerGap())
        );

        jLabel10.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel10.setText("HỌC KỲ:");

        cbb_hocKy.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        cbb_hocKy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbb_hocKy.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbb_hocKyItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 124, Short.MAX_VALUE)
                .addComponent(cbb_hocKy, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(cbb_hocKy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jLabel11.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel11.setText("NHÓM:");

        cbb_nhom.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        cbb_nhom.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cbb_nhom.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbb_nhomItemStateChanged(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cbb_nhom, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbb_nhom, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel3Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jPanel1, jPanel6, jPanel8});

        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 269, Short.MAX_VALUE))
        );

        jPanel2.add(jPanel10, java.awt.BorderLayout.CENTER);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("DANH SÁCH ĐIỂM SINH VIÊN");

        cbb_khoa.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        cbb_khoa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Công Nghệ Thông Tin", "Viễn Thông" }));
        cbb_khoa.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbb_khoaItemStateChanged(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel1.setText("KHOA");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(cbb_khoa, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbb_khoa, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(jLabel1))
                .addContainerGap())
        );

        jPanel14.add(jPanel7);

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 956, Short.MAX_VALUE)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel2.add(jPanel12, java.awt.BorderLayout.PAGE_START);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnGhiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGhiActionPerformed
        try {
            saveTable();
            JOptionPane.showMessageDialog(this, "Lưu điểm thành công", "Thông báo thành công", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(pn_NhapDiem.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Lưu điểm thất bại", "Thông báo lỗi", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnGhiActionPerformed

    private void cbb_khoaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbb_khoaItemStateChanged
        try {
            setUpNienKhoaCombobox();
        } catch (SQLException ex) {
            Logger.getLogger(pn_NhapDiem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cbb_khoaItemStateChanged

    private void cbb_nienKhoaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbb_nienKhoaItemStateChanged
        try {
            setUpHocKyCombobox();
        } catch (SQLException ex) {
            Logger.getLogger(pn_NhapDiem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cbb_nienKhoaItemStateChanged

    private void cbb_hocKyItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbb_hocKyItemStateChanged
        try {
            setUpMonHocCombobox();
        } catch (SQLException ex) {
            Logger.getLogger(pn_NhapDiem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cbb_hocKyItemStateChanged

    private void cbb_maMHItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbb_maMHItemStateChanged
        try {
            setUpNhomCombobox();
        } catch (SQLException ex) {
            Logger.getLogger(pn_NhapDiem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cbb_maMHItemStateChanged

    private void cbb_nhomItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbb_nhomItemStateChanged
        try {
            getLTC_NK_HK_MH_NHOM();
        } catch (SQLException ex) {
            Logger.getLogger(pn_NhapDiem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cbb_nhomItemStateChanged

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        setUpKhoaComboBox();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void btn_inBDTKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_inBDTKActionPerformed
        frame_BDTK.setVisible(true);
        setUpReport();
    }//GEN-LAST:event_btn_inBDTKActionPerformed

    private void cbb_report_khoaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbb_report_khoaItemStateChanged
        try {
            setUpLopComboBox();
        } catch (SQLException ex) {
            Logger.getLogger(pn_NhapDiem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cbb_report_khoaItemStateChanged

    private void cbb_report_lopItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbb_report_lopItemStateChanged
        try {
            loadListReport();
        } catch (SQLException ex) {
            Logger.getLogger(pn_NhapDiem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_cbb_report_lopItemStateChanged

    private void btn_xemPDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_xemPDActionPerformed
        String maSV = txt_report_maSV.getText();
        loadListReportPhieuDiem(maSV);
    }//GEN-LAST:event_btn_xemPDActionPerformed

    private void btn_inPDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_inPDActionPerformed
        frame_PD.setVisible(true);
    }//GEN-LAST:event_btn_inPDActionPerformed

    public boolean isMark(Object obj) {
        if (obj == null) return false;
        try {
            Float mark = Float.parseFloat(String.valueOf(obj));
            return mark >= 0 && mark <= 10;
        } catch(NumberFormatException ex) {
            return false;
        }
    }
    
    public void setUpReport(){
        cbb_report_khoa.removeAllItems();
        Object[] servers = this.variables.getDatabase().getServers().keySet().toArray();
        
        if(this.variables.getUser().getDatabaseRole().equals("KHOA")) {
            cbb_report_khoa.addItem(this.variables.getDatabase().getCurrentServerName());
        } else {
            for(Object item: servers){
                if(!item.toString().equals(this.variables.getPHONG_KE_TOAN_NAME())){
                    cbb_report_khoa.addItem(item.toString());
                }
            }
        }
    }
    
    public void setUpLopComboBox() throws SQLException {
        if (cbb_report_khoa.getSelectedItem() != null) {
            String selectedKhoa = cbb_report_khoa.getSelectedItem().toString();
            String link = this.variables.getLink(this.variables.getDatabase().getCurrentServerName(), selectedKhoa);
            String query = "";
            if (link == null) {
                query = "EXEC QLDSV_TC.DBO.view_getAllLop";
                
            } else {
                query = "EXEC " + link + ".QLDSV_TC.DBO.view_getAllLop";
            }
            Statement stmt = this.variables.getDatabase().getStatement();
            ResultSet rs = stmt.executeQuery(query);
            this.variables.getDatabase().getLopManager().clearData();
            while(rs.next()) {
                LOP l = new LOP();
                l.setMaLop(rs.getString("MALOP"));
                l.setTenLop(rs.getString("TENLOP"));
                l.setKhoaHoc(rs.getString("KHOAHOC"));
                l.setMaKhoa(rs.getString("MAKHOA"));
                this.variables.getDatabase().getLopManager().insertLOP(l);
            }
            cbb_report_lop.removeAllItems();
            for (LOP item: this.variables.getDatabase().getLopManager().getListLOP()){
                cbb_report_lop.addItem(item.getMaLop() + "- " + item.getTenLop());
            }
        }
    }
    
    public void loadListReport() throws SQLException {
        if (cbb_report_khoa.getSelectedItem() != null && cbb_report_lop.getSelectedItem() != null) {
            String selectedKhoa = cbb_report_khoa.getSelectedItem().toString();
            String selectedLop = cbb_report_lop.getSelectedItem().toString().split(" ")[0];
            String link = this.variables.getLink(this.variables.getDatabase().getCurrentServerName(), selectedKhoa);
            String query = "";
            if (link == null) {
                query = "EXEC QLDSV_TC.dbo.SP_INBD_TONGKET N'" + selectedLop + "'";
                
            } else {
                query = "EXEC " + link + ".QLDSV_TC.dbo.SP_INBD_TONGKET N'" + selectedLop + "'";
            }
            Statement stmt = this.variables.getDatabase().getStatement();
            ResultSet rs = stmt.executeQuery(query);
            
            ResultSetMetaData metaData = rs.getMetaData();
            int columnCount = metaData.getColumnCount();

            String[] columnLabels = new String[columnCount];
            for (int i = 0; i < columnCount; i++) {
                columnLabels[i] = metaData.getColumnLabel(i + 1);
            }

            DefaultTableModel tableModel = new DefaultTableModel(columnLabels, 0);

            while (rs.next()) {
                Vector<Object> rowData = new Vector<>();
                for (int i = 0; i < columnCount; i++) {
                    rowData.add(rs.getObject(i + 1));
                }
                tableModel.addRow(rowData);
            }

            tbl_BDTK.setModel(tableModel);
        }
    }
    
    public void loadListReportPhieuDiem(String maSV) {
        try {
            String DBRole = this.variables.getUser().getDatabaseRole();
            String query = "EXEC QLDSV_TC.DBO.SP_IN_PD '" + maSV + "', '" + DBRole + "'";
            Statement stmt = this.variables.getDatabase().getStatement();
            ResultSet rs = stmt.executeQuery(query);
            DefaultTableModel model = (DefaultTableModel) tbl_PD.getModel();
            model.setRowCount(0);
            while(rs.next()) {
                Object[] obj = new Object[]{
                    rs.getString("TENMH"),
                    rs.getString("DIEM")
                };
                model.addRow(obj);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Có lỗi", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(pn_NhapDiem.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
     
    public void setUpKhoaComboBox() {
        cbb_khoa.removeAllItems();
        Object[] servers = this.variables.getDatabase().getServers().keySet().toArray();
        
        if(this.variables.getUser().getDatabaseRole().equals("KHOA")) {
            cbb_khoa.addItem(this.variables.getDatabase().getCurrentServerName());
        } else {
            for(Object item: servers){
                if(!item.toString().equals(this.variables.getPHONG_KE_TOAN_NAME())){
                    cbb_khoa.addItem(item.toString());
                }
            }
        }
    }
    
    public void setUpNienKhoaCombobox() throws SQLException{
        if (cbb_khoa.getSelectedItem() != null) {
            String selectedKhoa = cbb_khoa.getSelectedItem().toString();
            String link = this.variables.getLink(this.variables.getDatabase().getCurrentServerName(), selectedKhoa);
            String query = "";
            if (link == null) {
                query = "select * from QLDSV_TC.DBO.view_getNK";
            } else {
                query = "select * from " + link + ".QLDSV_TC.DBO.view_getNK";
            }
            Statement stmt = this.variables.getDatabase().getStatement();
            ResultSet rs = stmt.executeQuery(query);
            List<String> nienKhoa = new ArrayList<>();
            while(rs.next()) {
                nienKhoa.add(rs.getString("NIENKHOA"));
            }
            cbb_nienKhoa.removeAllItems();
            for (String item: nienKhoa){
                cbb_nienKhoa.addItem(item);
            }
        }
    }
    
    public void setUpHocKyCombobox() throws SQLException{
        if (cbb_khoa.getSelectedItem() != null && cbb_nienKhoa.getSelectedItem() != null) {
            String selectedKhoa = cbb_khoa.getSelectedItem().toString();
            String selectedNienKhoa = cbb_nienKhoa.getSelectedItem().toString();
            String link = this.variables.getLink(this.variables.getDatabase().getCurrentServerName(), selectedKhoa);
            String query = "";
            if (link == null) {
                query = "EXEC QLDSV_TC.DBO.SP_GETHK '" + selectedNienKhoa +"'";
            } else {
                query = "EXEC " + link + ".QLDSV_TC.DBO.SP_GETHK '" + selectedNienKhoa +"'";
            }
            Statement stmt = this.variables.getDatabase().getStatement();
            ResultSet rs = stmt.executeQuery(query);
            List<String> hocKy = new ArrayList<>();
            while(rs.next()) {
                hocKy.add(rs.getString("HOCKY"));
            }
            cbb_hocKy.removeAllItems();
            for (String item: hocKy){
                cbb_hocKy.addItem(item);
            }
        }
    }
    
    public void setUpMonHocCombobox() throws SQLException{
        if (cbb_khoa.getSelectedItem() != null && cbb_nienKhoa.getSelectedItem() != null && cbb_hocKy.getSelectedItem() != null) {
            String selectedKhoa = cbb_khoa.getSelectedItem().toString();
            String selectedNienKhoa = cbb_nienKhoa.getSelectedItem().toString();
            String selectedHocKy = cbb_hocKy.getSelectedItem().toString();
            String link = this.variables.getLink(this.variables.getDatabase().getCurrentServerName(), selectedKhoa);
            String query = "";
            if (link == null) {
                query = "EXEC QLDSV_TC.DBO.SP_GETMAMH '" + selectedNienKhoa +"', '" + selectedHocKy + "'";
            } else {
                query = "EXEC " + link + ".QLDSV_TC.DBO.SP_GETMAMH '" + selectedNienKhoa +"', '" + selectedHocKy + "'";
            }
            Statement stmt = this.variables.getDatabase().getStatement();
            ResultSet rs = stmt.executeQuery(query);
            List<String> maMH = new ArrayList<>();
            while(rs.next()) {
                maMH.add(rs.getString("MAMH"));
            }
            cbb_maMH.removeAllItems();
            for (String item: maMH){
                cbb_maMH.addItem(item);
            }
        }
    }
    
    public void setUpNhomCombobox() throws SQLException{
        if (cbb_khoa.getSelectedItem() != null && cbb_nienKhoa.getSelectedItem() != null && cbb_hocKy.getSelectedItem() != null && cbb_maMH.getSelectedItem() != null) {
            String selectedKhoa = cbb_khoa.getSelectedItem().toString();
            String selectedNienKhoa = cbb_nienKhoa.getSelectedItem().toString();
            String selectedHocKy = cbb_hocKy.getSelectedItem().toString();
            String selectedMaMH = cbb_maMH.getSelectedItem().toString();
            String link = this.variables.getLink(this.variables.getDatabase().getCurrentServerName(), selectedKhoa);
            String query = "";
            if (link == null) {
                query = "EXEC QLDSV_TC.DBO.SP_GETNHOM '" + selectedNienKhoa +"', '" + selectedHocKy + "', '" + selectedMaMH + "'";
            } else {
                query = "EXEC " + link + ".QLDSV_TC.DBO.SP_GETNHOM '" + selectedNienKhoa +"', '" + selectedHocKy + "', '" + selectedMaMH + "'";
            }
            Statement stmt = this.variables.getDatabase().getStatement();
            ResultSet rs = stmt.executeQuery(query);
            List<String> nhom = new ArrayList<>();
            while(rs.next()) {
                nhom.add(rs.getString("NHOM"));
            }
            cbb_nhom.removeAllItems();
            for (String item: nhom){
                cbb_nhom.addItem(item);
            }
        }
    }
    
    public void getLTC_NK_HK_MH_NHOM() throws SQLException {
        if (cbb_khoa.getSelectedItem() != null 
                && cbb_nienKhoa.getSelectedItem() != null 
                && cbb_hocKy.getSelectedItem() != null 
                && cbb_maMH.getSelectedItem() != null 
                && cbb_nhom.getSelectedItem() != null) {
            String selectedKhoa = cbb_khoa.getSelectedItem().toString();
            String selectedNienKhoa = cbb_nienKhoa.getSelectedItem().toString();
            String selectedHocKy = cbb_hocKy.getSelectedItem().toString();
            String selectedMaMH = cbb_maMH.getSelectedItem().toString();
            String selectedNhom = cbb_nhom.getSelectedItem().toString();
            String link = this.variables.getLink(this.variables.getDatabase().getCurrentServerName(), selectedKhoa);
            String query = "";
            if (link == null) {
                query = "EXEC QLDSV_TC.DBO.SP_GETMALTC_NK_HK_MAMH_NHOM '" + selectedNienKhoa +"', '" + selectedHocKy + "', '" + selectedMaMH + "', '" + selectedNhom + "'";
            } else {
                query = "EXEC " + link + ".QLDSV_TC.DBO.SP_GETMALTC_NK_HK_MAMH_NHOM '" + selectedNienKhoa +"', '" + selectedHocKy + "', '" + selectedMaMH + "', '" + selectedNhom + "'";
            }
            Statement stmt = this.variables.getDatabase().getStatement();
            ResultSet rs = stmt.executeQuery(query);
            this.variables.getDatabase().getDangKyManager().clearData();
            while(rs.next()) {
                DANGKY dk = new DANGKY();
                dk.setMaLTC(rs.getString("MALTC"));
                dk.setMaSV(rs.getString("MASV"));
                dk.setDiemCC(rs.getInt("DIEM_CC"));
                dk.setDiemGK(rs.getFloat("DIEM_GK"));
                dk.setDiemCK(rs.getFloat("DIEM_CK"));
                dk.setHuyDK(rs.getInt("HUYDANGKY"));
                this.variables.getDatabase().getDangKyManager().insertDK(dk);
            }
            putDataIntoTable();
        }
    }
    
    public void putDataIntoTable() {
        DefaultTableModel model = (DefaultTableModel) tbl_NhapDiem.getModel();
        model.setRowCount(0);
        List<DANGKY> myList = variables.getDatabase().getDangKyManager().getListDK();
        for (DANGKY item: myList){
            Object[] obj = new Object[]{
                item.getMaLTC(),
                item.getMaSV(),
                item.getDiemCC(),
                item.getDiemGK(),
                item.getDiemCK(),
                item.getDiemCC() * 0.1 + item.getDiemGK() * 0.3 + item.getDiemCK() * 0.6
            };
            model.addRow(obj);
        }
        sortTable();
    }
    
    public void saveTable() throws SQLServerException, SQLException {
        SQLServerDataTable dataTable = new SQLServerDataTable();
        dataTable.addColumnMetadata("MALTC", java.sql.Types.INTEGER);
        dataTable.addColumnMetadata("MASV", java.sql.Types.NCHAR);
        dataTable.addColumnMetadata("DIEM_CC", java.sql.Types.INTEGER);
        dataTable.addColumnMetadata("DIEM_GK", java.sql.Types.FLOAT);
        dataTable.addColumnMetadata("DIEM_CK", java.sql.Types.FLOAT);
        
        DefaultTableModel model = (DefaultTableModel) tbl_NhapDiem.getModel();
        for (int row = 0; row < tbl_NhapDiem.getRowCount(); row++) {
            String maLTC = model.getValueAt(row, 0).toString();
            String maSV = model.getValueAt(row, 1).toString();
            String diemCC = model.getValueAt(row, 2).toString();
            String diemGK = model.getValueAt(row, 3).toString();
            String diemCK = model.getValueAt(row, 4).toString();
            dataTable.addRow(maLTC, maSV, diemCC, diemGK, diemCK);
        }
        
        String ececStoredProc = "EXEC SP_UPDATE_DIEM ?";
        SQLServerPreparedStatement pStmt = (SQLServerPreparedStatement)this.variables.getDatabase().getConnection().prepareStatement(ececStoredProc);
        pStmt.setStructured(1, "dbo.DATA_TABLE_NHAP_DIEM", dataTable);
        pStmt.execute();
    }
    
    private void sortTable() {
        DefaultTableModel teacherModel = (DefaultTableModel) tbl_NhapDiem.getModel();
        TableRowSorter<DefaultTableModel> sorter = new TableRowSorter<>(teacherModel);
        tbl_NhapDiem.setRowSorter(sorter);
    }
    
    public void clearAllDataFromTable() {
        DefaultTableModel subjectModel = (DefaultTableModel) tbl_NhapDiem.getModel();
        subjectModel.setRowCount(0);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane abc;
    private javax.swing.JButton btnGhi;
    private javax.swing.JButton btnPhucHoi;
    private javax.swing.JButton btnThoat;
    private javax.swing.JButton btn_inBDTK;
    private javax.swing.JButton btn_inPD;
    private javax.swing.JButton btn_xemPD;
    private javax.swing.JComboBox<String> cbb_hocKy;
    private javax.swing.JComboBox<String> cbb_khoa;
    private javax.swing.JComboBox<String> cbb_maMH;
    private javax.swing.JComboBox<String> cbb_nhom;
    private javax.swing.JComboBox<String> cbb_nienKhoa;
    private javax.swing.JComboBox<String> cbb_report_khoa;
    private javax.swing.JComboBox<String> cbb_report_lop;
    private javax.swing.JFrame frame_BDTK;
    private javax.swing.JFrame frame_PD;
    private javax.swing.JButton jButton7;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbl_BDTK;
    private javax.swing.JTable tbl_NhapDiem;
    private javax.swing.JTable tbl_PD;
    private javax.swing.JTextField txt_report_maSV;
    // End of variables declaration//GEN-END:variables
}
